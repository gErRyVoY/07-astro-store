---
import Navbar from "@/components/shared/Navbar.astro";
import AuthLayout from "@/layouts/AuthLayout.astro";

const email = Astro.cookies.get('email')?.value ?? '';
const rememberMe = !!email;
---

<Navbar />
<AuthLayout>
    <class class="p-12 bg-white mx-auto rounded-2xl w-100 ">
        <div class="mb-4">
            <h3 class="font-semibold text-2xl text-gray-800">Login</h3>
            <p class="text-gray-500">Please login to your account.</p>
        </div>
        <form class="space-y-5">
            <div class="space-y-2">
                <label class="text-sm font-medium text-gray-700 tracking-wide">Email</label>
                <input
                    type="email"
                    name="email"
                    value={ email }
                    class="w-full text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
                    placeholder="mail@gmail.com"
                >
            </div>
            <div class="space-y-2">
                <label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">
                    Password
                </label>
                <input
                    type="password"
                    name="password"
                    class="w-full content-center text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
                    placeholder="Enter your password"
                />
            </div>
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <input
                        id="remember_me"
                        name="remember_me"
                        type="checkbox"
                        checked={ rememberMe }
                        class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded"
                    />
                    <label for="remember_me" class="ml-2 block text-sm text-gray-800">
                        Recuerdame
                    </label>
                </div>
                <div class="text-sm">
                    <a href="/register" class="text-green-400 hover:text-green-500">
                        &iquest;No tienes cuenta&quest;
                    </a>
                </div>
            </div>
            <div>
                <button type="submit" id="btn-submit" class="disabled:bg-gray-300 w-full flex justify-center bg-green-400  hover:bg-green-500 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500">
                    Login
                </button>

                <div class="flex flex-1 w-full my-3">
                    <div class="w-full border-t-2 border-gray-500"></div>
                </div>

                <button type="button" id="btn-google" class="disabled:bg-gray-300 w-full flex justify-center bg-blue-400 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500">
                    Login con Google
                </button>
            </div>
        </form>
        <div class="pt-5 text-center text-gray-400 text-xs">
            <span>
                Copyright &copy; 2021-{new Date().getFullYear()}
                <a href="https://codepen.io/uidesignhub" rel="" target="_blank" title="Ajimon" class="text-green hover:text-green-500 ">AJI</a>
            </span>
        </div>
    </class>
</AuthLayout>

<script>
    // import { actions } from 'astro:actions';
    import Swal from 'sweetalert2';


    const form = document.querySelector('form') as HTMLFormElement;
    const btnSubmit = document.querySelector('#btn-submit') as HTMLButtonElement;
    const btnGoogle = document.querySelector('#btn-google') as HTMLButtonElement;

    const { signIn } = await import('auth-astro/client');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        btnSubmit.setAttribute('disabled', 'disabled');

        const formData = new FormData(form);

        const resp = await signIn('credentials', {
            email: formData.get('email') as string,
            password: formData.get('password') as string,
            redirect: false,
        }as any);

        console.log({ resp });

        if (resp) {
            Swal.fire({
                icon: 'error',
                title: 'Error al ingresar',
                // text: error.message,
                text: 'Usuario / ContraseÃ±a no son correctos',
            });
            btnSubmit.removeAttribute('disabled');
            return;
        }

        // TODO:
        window.location.replace('/');
    });

        btnGoogle.addEventListener('click', async () => {
        btnGoogle.setAttribute('disabled', 'disabled');

        try {
            //! Paso 1: obtener la credenciales del lado del cliente

            // Paso 2: Vericar las credenciales en el backend

            if (true) {
                alert('error.message');
                btnGoogle.removeAttribute('disabled');
                return;
            }

            btnGoogle.innerText = 'Redireccionando...';
            window.location.replace('/protected');
        } catch (error) {
            console.log(error);
            btnGoogle.removeAttribute('disabled');
        }
    });
</script>
